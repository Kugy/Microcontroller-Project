// MICRO CONTROLLER ANTITHEFT PROJECT
// Author : Srivijay and Kughan
 ATmega8 , 48, 88, 168 , 328

/ Reset PC6 |1 28| PC5
 PD0 |2 27| PC4
 PD1 |3 26| PC3 LCD .RW PD2 |4 25| PC2 LCD .E PD3 |5 24| PC1 LCD.
       RS PD4 |6 23| PC0
 Vcc |7 22| Gnd Gnd |8 21| Aref PB6 |9 20| AVcc
 PB7 |10 19| PB5 SCK LCD .D7
 PD5 |11 18| PB4 MISO LCD.D6
 PD6 |12 17| PB3 MOSI LCD .D5
 PD7 |13 16| PB2 LCD .D4
 LED PB0 |14 15| PB1 switch 1
 */

 # define F_CPU 1000000 UL // 1 MHz internal clock

 # include <avr /io.h>
 # include <util / delay .h>
 # include " lcd .h"


 void check ();

 void ledSwitch ( int state );

 void tilt ( int a); volatile int alarm = 0; int main ()
 {

 DDRD = 0 x00 ;// PORTD as input
 PORTD = 0 b11110000 ;

 DDRB = 0 xFF ;// PORTB as output lcd_init ( LCD_DISP_ON ); // initialize LCD

 while (1)
 {
 // lcd_puts (" ON ");
 lcd_puts ("."); _delay_ms (100) ;
 // Any of the 4
 // if ( bit_is_set (PIND ,4) && bit_is_set (PIND ,5) && bit_is_set (PIND,6) &&
 bit_is_set (PIND ,7))
 if ((˜ PIND & (1 < <4)) | (˜ PIND & (1 < <5)) | (˜ PIND & (1 < <6)) | (˜ PIND &
 (1 < <7)))


 // if ( PIND & (0 b11110000 ))
 {
 lcd_puts ("ON\n");
 check ();
 }
 if ((˜ PIND & (1 << 3)))
 {
 tilt (1) ;
 }
 else
 {
 if ((˜ PIND & (1 < <4)) && (˜ PIND & (1 < <5)))
 {
 tilt (0) ;

 }
 }

 }
 }
 // (˜ PIND & (1 << 3))



 // Checks whether the correct code has been input void check ()
 {

 // PIN5 & 7 should be pressed AND PIN4 & 6 should not be pressed
 /
 if ((˜ PIND & (1 < <4)) && (˜ PIND & (1 < <5)))
 {
 if ( alarm == 1)
 {

 }
 }
 else
 {

 ledSwitch (0) ;
 if ( alarm == 0)
 {
 ledSwitch (1) ;
 }
 }

 }

 // Turns LED on/ off based on argument void ledSwitch (int state )
 {

 if ( state == 1)
 {
 PORTB = PORTB | (1 << PB1 );// turn on LED
 alarm = 1;
 } else if( state == 0)
 {
 PORTB = PORTB & ˜(1 << PB1 );// turn OFF LED
 alarm = 0;
 }
 }
 void tilt ( int a)
 {

 if(a ==1)
 {
 ledSwitch (1) ;
 }
 else if(a ==0)
 {
 ledSwitch (0) ;
 }

 }
